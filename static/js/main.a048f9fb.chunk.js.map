{"version":3,"sources":["components/Map.js","components/NavBar.js","components/SideMenu.js","App.js","serviceWorker.js","index.js"],"names":["Map","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onError","alert","onScriptLoad","bind","assertThisInitialized","_this2","map","window","google","maps","document","getElementById","id","options","url","URL","parameters","search","URLSearchParams","client_id","client_secret","v","locale","ll","query","fetch","then","res","json","places","response","groups","items","place","name","venue","address","location","lat","lng","onMapLoad","catch","_this3","s","createElement","type","async","defer","src","x","getElementsByTagName","parentNode","insertBefore","addEventListener","e","gm_authFailure","onerror","react_default","a","className","aria-label","role","Component","NavBar","tabIndex","onClick","changeMenu","onKeyPress","SideMenu","_this$props","menu","onChangeInput","createInfoWindowFromList","showingPlaces","concat","placeholder","onChange","key","App","state","infoWindow","markerList","setState","marker","target","info","createInfoWindow","clearMarkers","setMap","markers","filter","toUpperCase","match","value","createMarkers","close","setContent","addListener","setMarker","ok","prefix","photos","suffix","content","setIcon","makeMarkerIcon","open","markerColor","MarkerImage","Size","Point","InfoWindow","defaultIcon","highlightedIcon","forEach","Marker","position","title","animation","Animation","DROP","icon","push","_this4","components_SideMenu","components_NavBar","components_Map","center","zoom","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","ReactDOM","render","src_App","process","href","origin","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a048f9fb.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Map extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.onScriptLoad = this.onScriptLoad.bind(this)\n    }\n\n    onScriptLoad() {\n        const map = new window.google.maps.Map(\n            document.getElementById(this.props.id),\n            this.props.options);\n            \n        const url = new URL(\"https://api.foursquare.com/v2/venues/explore\")\n        const parameters = {\n            client_id: \"XRSSA1AQTZ45PLHSXP3ZAWMKBKKX31S0YPBDWJYCIXXHSIJA\",\n            client_secrect: \"QBTVBE0BUBV4RD1LAHY0Q40I4ASPCOPBKQFC4MQKXWKVU4AK\",\n            query: \"food\",\n            ll: \"-8.129725,-34.902381\"\n        }\n        url.search = new URLSearchParams({\n            client_id: parameters.client_id,\n            client_secret: parameters.client_secrect, v: \"20181025\", locale: 'br',\n            ll: parameters.ll, query: parameters.query\n        })\n\n        fetch(url)\n            .then(res => res.json())\n            .then(res => {\n                let places = res.response.groups[0].items.map(place => ({\n                    name: place.venue.name,\n                    address: place.venue.location.address,\n                    lat: place.venue.location.lat,\n                    lng: place.venue.location.lng,\n                    id: place.venue.id\n                }))\n                this.props.onMapLoad(map, places)\n            })\n            .catch(() => (\n                alert(`Something wrong happened, check your internet conection and refresh the page`)\n            ))\n    }\n\n    componentDidMount() {\n        if (!window.google) {\n            let s = document.createElement('script')\n            s.type = 'text/javascript'\n            s.async = true\n            s.defer = true\n            s.src = `https://maps.google.com/maps/api/js?key=AIzaSyDqnxrPFH-QNRfwryEntbFmlqAUL3-1dEE`\n            let x = document.getElementsByTagName('script')[0]\n            x.parentNode.insertBefore(s, x)\n            // Below is important. \n            //We cannot access google.maps until it's finished loading\n            s.addEventListener('load', e => {\n                this.onScriptLoad()\n            })\n            window.gm_authFailure = () => {\n                this.onError()\n            };\n            s.onerror = () => {\n                this.onError()\n            };\n        } else {\n            this.onScriptLoad()\n        }\n    }\n\n    onError = () => {\n        alert(`Something wrong happened, check your internet conection and refresh the page`)\n    }\n\n    render() {\n        return (\n            <div \n                className=\"map\" \n                aria-label=\"map\"\n                role=\"application\"\n                id={this.props.id} />\n        );\n    }\n}\n\nexport default Map","import React from 'react';\n\nconst NavBar = (props) => {\n    return (\n        <nav className=\"nav\">\n            <div \n                className=\"nav-burger\" \n                tabIndex=\"1\" \n                aria-label=\"menu\"\n                role=\"menu\"\n                onClick={props.changeMenu} \n                onKeyPress={props.changeMenu}\n                >\n                <div className=\"bar\"></div>\n                <div className=\"bar\"></div>\n                <div className=\"bar\"></div>\n            </div>\n            <h1 className=\"title\">Recife Boa Viagem</h1>\n        </nav>\n    )  \n}\n\nexport default NavBar","import React, { Component } from 'react';\n\nclass SideMenu extends Component {\n    render() {\n        const { menu, onChangeInput, createInfoWindowFromList, showingPlaces} = this.props\n        return (\n            <aside className={`side-menu ${menu ? \"visible\" : \"\"}`}>\n                <h2 className=\"menu-title\">Food Finder</h2>\n                <input\n                    tabIndex=\"2\"\n                    aria-label=\"search for food\" \n                    className=\"food-finder\"\n                    placeholder=\"Search for food here\"\n                    type=\"text\" \n                    onChange={onChangeInput} ></input>\n                \n                <ul className=\"food-list\">\n                    {showingPlaces.map((place, id) => (\n                        <li\n                            tabIndex=\"3\"\n                            aria-label=\"choose restaurant\"\n                            role=\"button\"\n                            className=\"food-item\"\n                            key={place.id}\n                            id={id}\n                            onKeyPress={createInfoWindowFromList}\n                            onClick={createInfoWindowFromList}\n                            >{place.name}</li>\n                    ))}\n                </ul>\n                \n                \n            </aside>\n        )\n    }\n}\n\nexport default SideMenu","import React, { Component } from 'react';\nimport Map from './components/Map'\nimport NavBar from './components/NavBar'\nimport SideMenu from './components/SideMenu'\n\nclass App extends Component {\n  state = {\n    places: [],\n    showingPlaces: [],\n    menu: false,\n    infoWindow: null,\n    map: null,\n    markerList: [],\n  }\n\n  changeMenu = () => {\n    let menu = !this.state.menu\n    this.setState({ menu })\n  }\n\n  createInfoWindow(marker, info, map) {\n    let infoWindow = this.state.infoWindow\n    infoWindow.close()\n    infoWindow.setContent('')\n    infoWindow.marker = marker\n    \n    infoWindow.addListener('closeclick', function () {\n      infoWindow.setMarker = null;\n    });\n    let url = new URL(`https://api.foursquare.com/v2/venues/${info.id}/photos`)\n    const parameters = {\n      client_id: \"XRSSA1AQTZ45PLHSXP3ZAWMKBKKX31S0YPBDWJYCIXXHSIJA\",\n      client_secrect: \"QBTVBE0BUBV4RD1LAHY0Q40I4ASPCOPBKQFC4MQKXWKVU4AK\",\n      v: \"20181025\"\n    }\n    url.search = new URLSearchParams({\n      client_id: parameters.client_id,\n      client_secret: parameters.client_secrect, v: \"20181025\"\n    })\n    \n    fetch(url)\n    .then(res => res.json())\n    .then(res => {\n      if (res.ok){\n        let prefix = res.response.photos.items[0].prefix\n        let size = 'width100'\n        let suffix = res.response.photos.items[0].suffix\n        url = new URL(`${prefix}${size}${suffix}`)\n        url.search = new URLSearchParams({\n          client_id: parameters.client_id,\n          client_secret: parameters.client_secrect, v: \"20181025\"\n        })\n        return url\n      }\n      else {\n        return 'https://via.placeholder.com/108x120.png?text=No+Image' //quota_exceeded\n      }\n    })\n    .then(res => (\n      `<div>\n        <img src=${res} alt=\"${info.name}\"/>\n        <h3>${info.name}</h3>\n        <p>${info.address}</p>\n        <p>Foursquare<p>\n      </div>`\n    ))\n    .then(content => {\n      infoWindow.setContent(content)\n      this.state.markerList.map(marker => (marker.setIcon(this.makeMarkerIcon('FFFF24'))))\n      marker.setIcon(this.makeMarkerIcon('FFFFFF'))\n      infoWindow.open(map, marker)\n    })\n    .catch(() =>(\n      alert(`Something wrong happened, check your internet conection and refresh the page`)\n    ))\n  }\n\n  createInfoWindowFromList = (e) => {\n    const marker = this.state.markerList[e.target.id]\n    const info = this.state.showingPlaces[e.target.id]\n    this.createInfoWindow(marker, info, this.state.map)\n  }\n\n  makeMarkerIcon(markerColor) {\n    var markerImage = new window.google.maps.MarkerImage(\n      'http://chart.googleapis.com/chart?chst=d_map_spin&chld=1.15|0|' + markerColor +\n      '|40|_|%E2%80%A2',\n      new window.google.maps.Size(21, 34),\n      new window.google.maps.Point(0, 0),\n      new window.google.maps.Point(10, 34),\n      new window.google.maps.Size(21, 34));\n    return markerImage;\n  }\n  onChangeInput = (e) => {\n    let clearMarkers = this.state.markerList;\n    clearMarkers = clearMarkers.map(marker => {\n      marker.setMap(null);\n      return marker;\n    });\n\n    this.setState({ markers: clearMarkers });\n  \n    let showingPlaces = this.state.places.filter(place => (\n      place.name.toUpperCase().match(e.target.value.toUpperCase())\n    )) \n    this.createMarkers(this.state.map, showingPlaces)\n  }\n\n  createMarkers(map, showingPlaces){\n    let marker, markerList = []\n    this.setState({ map: map, infoWindow: new window.google.maps.InfoWindow() })\n    const defaultIcon = this.makeMarkerIcon;\n    const highlightedIcon = this.makeMarkerIcon;\n    showingPlaces.forEach((place, id) => {\n      marker = new window.google.maps.Marker({\n        position: { lat: place.lat, lng: place.lng },\n        map: map,\n        title: place.name,\n        animation: window.google.maps.Animation.DROP,\n        icon: defaultIcon('FFFF24')\n      })\n      markerList.push(marker)\n      marker.addListener('click', e => {\n        this.createInfoWindow(markerList[id], showingPlaces[id], map)\n      })\n      marker.addListener('mouseover', function () {\n        this.setIcon(highlightedIcon('FFFFFF'));\n      });\n      marker.addListener('mouseout', function () {\n        this.setIcon(defaultIcon('FFFF24'));\n      });\n    })\n    this.setState({ markerList: markerList, showingPlaces: showingPlaces })\n  }\n\n  render() {\n    return (\n      <div>\n        \n        <SideMenu \n          menu={this.state.menu}\n          onChangeInput={this.onChangeInput}\n          createInfoWindowFromList={this.createInfoWindowFromList}\n          showingPlaces={this.state.showingPlaces}/>\n\n        <div className={`wrapper ${this.state.menu ? \"slide\" : \"\"}`}>\n          <NavBar changeMenu={this.changeMenu}/>\n          <Map\n            id=\"MapRecife\"\n            options={{\n              center: { lat: -8.129725, lng: -34.902381 },\n              zoom: 16\n            }}\n            onMapLoad={(map, places) => {\n              this.setState({ places: places, showingPlaces: places })\n              this.createMarkers(map, places)\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}